<s_exp> ::= "(" <oper> ") " <s_exp> | <empty>
<arg> ::= <var> | <liter> | "(" <oper> ")"
<var> ::= <name> //+
<name> ::= <let> | <name_extr> //+
<name_extr> ::= <let> <name_extr> | <num> <name_extr> | <empty> //+
<let> ::= [a-z] //+
<num> ::= [0-9] //+
<liter> ::= <sign> <nums> | "\"" <str> "\"" | "'" <char> "'" | "PRAVDA" | "LOZH" //+
<char> ::= [a-z] | [0-9] //+
<sign> ::= <empty> | "+" | "-" //+
<nums> ::= <num> <nums_extr> //+
<nums_extr> ::= <num> <num_extr> | "." <d_num> | <empty> //+
<d_num> ::= <num> <d_num_extr> //+
<d_num_extr> ::= <num> <d_num_extr> | <empty> //+
<str> ::= <char> <str_extr> //+
<str_extr> ::= <char> <str_extr> | <empty> //+
<oper> ::= <easy_oper> | <hard_oper> | <func> | <car> | <cdr> | <cons> | <empty>  //+
<easy_oper> ::= <simple_oper> | <cond_oper> //+
//////<argf> ::= <var> | <sign> <num> | "(" <oper> ")"
<simple_oper> ::= <simple> ( " " <arg> )+ //+
<cond_oper> ::= <cond> ( " " <arg> )+ //+
<simple> ::= "+" | "-" | "*" | "/" | "max" | "min" //+
<cond> ::= "takzhe" | "libo" | "=" | "/=" | ">" | "<" | ">=" | "<=" //+
<hard_oper> ::= <loop_for> | <loop> | <if> | <write> | <read> | <mod> | <not> | <incf> | <decf> | <return> | <fact> | <setf> //+
<loop_for> ::= "idi_poka " <var> " ne_stanet " <var> <s_exp> //+
<loop> ::= "zhivi " <s_exp> "(umri_kogda (" <cond_oper> ") (" <return> "))" //+
<if> ::= "esli " "(" <cond_oper> ") (" <oper> ") " <s_exp> //+
<func> ::= "func " <name> " (" <var> ") " <s_exp> " (" <return> ")"
<params> ::= <var> <params_extr> | <empty>
<params_extr> ::= " " <var> <params_extr> | <empty>
<write> ::= "napishi " <arg> //+
<read> ::= "sprosi " <arg> //+
<mod> ::= "mod " <arg> " " <arg> //+
<not> ::= "ne " <arg> //+
<fact> ::= "! " <arg> //+
<incf> ::= "pribav " <arg> ( " " <arg>)? //+
<decf> ::= "ubav " <arg> ( " " <arg>)? //+
<return> ::= "verni " <arg> //+
<car> ::= "golova " <s_exp>
<cdr> ::= "telo " <s_exp>
<cons> ::= "partia " <arg> (" " <arg>)+
<setf> ::= "tovarisch " <var> " " <arg> //+
<empty> ::= " "